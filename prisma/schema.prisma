generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model User {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String
  email        String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?        
  userRoles    UserRole[]
  userCompanies UserCompany[]
}

model Role {
  id        String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String     @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?        
  userRoles UserRole[]
}

model UserRole {
  id     String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId String @db.Uuid
  roleId String @db.Uuid
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?        

  user   User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role  @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
}

model Company {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?        

  userCompanies UserCompany[]
}

model UserCompany {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String @db.Uuid
  companyId String @db.Uuid
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?        

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@unique([userId, companyId])
}